pipeline {
	agent any
	stages {
		stage("Docker Test") {
			steps {
				sh 'docker -v'
				cleanWs()
			}
		}
		stage("Testing") {
			parallel {
				stage("ServerSide Tests") {
					steps {
						sh '/var/lib/jenkins/apache-jmeter-3.1/bin/jmeter \
						-n -t /var/lib/jenkins/apache-jmeter-3.1/bin/benchmark.jmx -l ${WORKSPACE}/jmeter-results.jtl \
						-Jhost=${PROJECT_HOST} \
						-Jrequest_protocol=https \
						-Jloops=10 \
						-Jbase_path=/ \
						-Jadmin_path=admin \
						-Jadmin_user=admin \
						-Jadmin_password=123123q \
						-JfrontendPoolUsers=1 \
						-JdeadLocksPoolUsers=0 \
						-JadminPoolUsers=0 \
						-Jjmeter.save.saveservice.url=true \
						-Jjmeter.save.saveservice.response_data=true \
						-Jjmeter.save.saveservice.samplerData=true \
						-Jjmeter.save.saveservice.requestHeaders=true \
						-Jjmeter.save.saveservice.url=true \
						-Jjmeter.save.saveservice.responseHeaders=true'
					}
				}
				stage("ClientSide Tests") {
					steps {
					  sh 'docker run --shm-size=1g --rm --privileged -v "${WORKSPACE}"/results:/sitespeed.io \
					  sitespeedio/sitespeed.io:7.6.3 -b chrome  --video false --speedIndex https://${PROJECT_HOST}/ -n1 '
                      			}
				}
			}
		}
	}
	post {
		always {
		    archiveArtifacts allowEmptyArchive: true, artifacts: '**'
		}
	}
}
